[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "scfeatureprofiler"

version = "1.1.1"

description = "A powerful, multi-interface Python package for deep characterization of single-cell feature expression patterns."
readme = "README.md"
license = "MIT"
authors = [
    {name = "Qingzhou Zhang"}
]
classifiers = [
    
    "Development Status :: 4 - Beta",
    "Intended Audience :: Science/Research",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Scientific/Engineering :: Bio-Informatics",
]
requires-python = ">=3.9"


dependencies = [
    "numpy>=1.20.0",
    "pandas>=1.3.0",
    "scipy>=1.7.0",
    "statsmodels>=0.13.0",
    "joblib>=1.2.0",
    "typer>=0.9.0",
    "scanpy>=1.9.0", 
]

[project.optional-dependencies]
anndata = [
    "anndata>=0.8.0",
]
dev = [
    "black>=22.0.0",
    "ruff>=0.1.0",
    "mypy>=1.0.0",
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
]
docs = [
    "sphinx>=5.0.0",
    "sphinx-rtd-theme>=1.0.0",
    "numpydoc>=1.5.0",
]

all = [
    "scfeatureprofiler[dev]",
    "scfeatureprofiler[docs]",
]


# Scripts section updated to the new, single Typer app entry point
[project.scripts]
scprofiler = "scfeatureprofiler.cli:app"


[tool.setuptools.packages.find]
where = ["src"]


[tool.black]
line-length = 88
target-version = ['py39']

[tool.ruff]
line-length = 88
target-version = "py39"
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = []

[tool.ruff.per-file-ignores]
"__init__.py" = ["F401"]

[tool.mypy]
python_version = "3.9"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "--cov=scfeatureprofiler --cov-report=term-missing --cov-report=html"
